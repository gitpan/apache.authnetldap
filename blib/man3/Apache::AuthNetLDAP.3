.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
.ds L' '
.ds R' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds L' `
.ds R' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH AuthNetLDAP 3 "perl 5.004" "8/Jan/100" "User Contributed Perl Documentation"
.IX Title "AuthNetLDAP 3"
.UC
.IX Name "Apache::AuthNetLDAP - mod_perl module that uses the Net::LDAP module for user authentication for Apache"
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
.IX Header "NAME"
Apache::AuthNetLDAP \- mod_perl module that uses the Net::LDAP module for user authentication for Apache 
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.PP
.Vb 2
\& AuthName "LDAP Test Auth"
\& AuthType Basic
.Ve
.Vb 8
\& #only set the next two if you need to bind as a user for searching
\& #PerlSetVar BindDN "uid=user1,ou=people,o=acme.com" #optional
\& #PerlSetVar BindPWD "password" #optional
\& PerlSetVar BaseDN "ou=people,o=acme.com"
\& PerlSetVar LDAPServer ldap.acme.com
\& PerlSetVar LDAPPort 389
\& #PerlSetVar UIDAttr uid
\& PerlSetVar UIDAttr mail
.Ve
.Vb 1
\& require valid-user
.Ve
.Vb 1
\& PerlAuthenHandler Apache::AuthNetLDAP
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module authenticates users via LDAP using the Net::LDAP module. This module is Graham Barr's \*(L"pure\*(R" Perl LDAP API. 
.PP
It also uses all of the same parameters as the Apache::AuthPerLDAP, but I have added two extra parameters. 
.PP
The parameters are:
.Ip "PerlSetVar BindDN" 4
.IX Item "PerlSetVar BindDN"
Used to set initial \s-1LDAP\s0 user.
.Ip "PerlSetVar BindPWD" 4
.IX Item "PerlSetVar BindPWD"
Used to set initial \s-1LDAP\s0 password.
.Ip "PerlSetVar BaseDN" 4
.IX Item "PerlSetVar BaseDN"
This sets the search base used when looking up a user in an \s-1LDAP\s0 server.
.Ip "PerlSetVar LDAPServer " 4
.IX Item "PerlSetVar LDAPServer "
This is the hostname of the \s-1LDAP\s0 server you wish to use.
.Ip "PerlSetVar LDAPPort " 4
.IX Item "PerlSetVar LDAPPort "
This is the port the \s-1LDAP\s0 server is listening on.
.Ip "PerlSetVar UIDAttr" 4
.IX Item "PerlSetVar UIDAttr"
The attribute used to lookup the user.
.Sh "Uses for UIDAttr"
.IX Subsection "Uses for UIDAttr"
For example if you set the UIDAttr to uid, then the \s-1LDAP\s0 search filter will lookup a user using the search filter:
.PP
Normally you will use the uid attribute, but you may want (need) to use a different attribute depending on your \s-1LDAP\s0 server or to synchronize with different applications. For example some versions of Novell's \s-1LDAP\s0 servers that I've encountered stored the user's login name in the cn attribute (a really bad idea). And the Netscape Address Book uses a user's email address as the login id.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
It's a pretty straightforward install if you already have mod_perl and Net::LDAP already installed.
.PP
After you have unpacked the distribution type:
.PP
perl Makefile.PL
make 
make install
.PP
Then in your httpd.conf file or .htaccess file, in either a <Directory> or <Location> section put:
.PP
.Vb 2
\& AuthName "LDAP Test Auth"
\& AuthType Basic
.Ve
.Vb 7
\& #only set the next two if you need to bind as a user for searching
\& #PerlSetVar BindDN "uid=user1,ou=people,o=acme.com" #optional
\& #PerlSetVar BindPWD "password" #optional
\& PerlSetVar BaseDN "ou=people,o=acme.com"
\& PerlSetVar LDAPServer ldap.acme.com
\& PerlSetVar LDAPPort 389
\& PerlSetVar UIDAttr uid 
.Ve
.Vb 1
\& require valid-user
.Ve
.Vb 1
\& PerlAuthenHandler Apache::AuthNetLDAP
.Ve
.SH "HOMEPAGE"
.IX Header "HOMEPAGE"
.PP
.Vb 1
\&        Module Home:http://courses.unt.edu/mewilcox/
.Ve
.SH "AUTHOR   	(c) 1999 University of North Texas    	Mark Wilcox mewilcox@unt.edu"
.IX Header "AUTHOR   	(c) 1999 University of North Texas    	Mark Wilcox mewilcox@unt.edu"
.SH "SEE ALSO    the \fINet::LDAP\fR manpage"
.IX Header "SEE ALSO    the \fINet::LDAP\fR manpage"
.SH "ACKNOWLEDGMENTS"
.IX Header "ACKNOWLEDGMENTS"
.PP
.Vb 3
\& Graham Barr for writing Net::LDAP module.
\& Henrik Strom for writing the Apache::AuthPerLDAP module which I derived this from.
\& The O'Reilly "Programming Modules for Apache with Perl and C" (http://www.modperl.com).
.Ve

.rn }` ''
